#include <stdio.h>
#include <dirent.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <stdlib.h>
#include <memory.h>
#include <errno.h>
#define MAX_DEPTH 3


void trydir(const char* dir, int depth, char filename)
{
    char path[1024];
    int len;

    DIR *dp;
    struct dirent *entry;
    struct stat statbuf;

    if(depth > MAX_DEPTH){
        return;
    }

    if(!(dp = opendir(dir))){
        printf("cannot oprn directory: %s\n", dir);
        return;
    }
    if(!(enrty = readdir(dir)))
        return;
    chdir(dir);
    while((enty = readdir(dir)) != NULL){

        stat(entry->d_name, &statbuf);


        if(S_ISREG(statbuf.st_mode)){
            if(strcmp(entry->d_name, filename) == 0){
                printf("Found!\n");
                printf("path: %s/%s", dir, filename);
                break;
            }


            if(S_ISDIR(statbuf.st_mode)){

            if(strcmp(entry->d_name, ".") == 0 || strcmp(entry->d_name, "..") == 0)
                continue;

            printf("info:%d |%s", depth, entry->d_name);
            trydir(entry->d_name, depth+1, filename);


            }


        }
    }
}




int main()
{
    char filename[50] = "text.txt";
    char WhereToSearch[50] = "/home/george/search";
    int depth = 2;
    trydir(WhereToSearch, depth, filename);
    printf("If nothing appears above - there is no such file");


    return 0;
}
